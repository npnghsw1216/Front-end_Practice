Day05 - JavaScript

1. 자바스크립트(Javascript)
    - 1) 퍼즐 조각처럼 코드 형태로 HTML 페이지에 내장됨
    - 2) 컴파일 과정 없이 브라우저 내부의 자바스크립트 처리기(인터프리터:해석기)에 의해 바로 실행
        * 개발의 발전을 통해 컴파일이 가능해졌으며, Node.js로 서버 환경을 구축

        [index.html]                                                [웹브라우저]
        <script>
            자바스크립 코드 -> 인터프리터 -> 결과 출력
        </script>

2. 웹 페이지에 자바스크립트의 역할
    - 1) 웹 페이지는 3 큰 요소(HTML, CSS, JS)
    - 2) 자바스크립트는 사용자의 입력을 처리하거나 웹 애플리케이션을 작성하는 등 웹페이지의 동적 제어에 사용된다.
    - 3) 자바스크립트의 기능 상세
        - (1) 사용자의 입력 및 계산
            - HTML 폼은 입력 창만 제공
            - Key, Mouse의 입력과 계산은 오직 자바스크립에서만 처리 가능
        - (2) 웹 페이지 내용 및 모양의 동적 제어
            - HTML 태그의 속성이나 컨텐츠, CSS 속성 값을 변경하여 
              웹 페이지에 동적인 변화를 일으키는 데 활용된다.
        - (3) 브라우저 제어
            - 브라우저 윈도우의 크기나 모양 변경, 새 윈도우나 탭 열기, 
              다른 웹 사이트 접속, 브라우저의 히스토리 제어 등 브라우저의 작동 제어
        - (4) 웹 서버와의 통신(Ajax - 에이잭스/아작스)
            - 웹 페이지가 웹 서버와 데이터를 주고 받을 때 활용된다.
        - (5) 웹 애플리케이션 작성(API)
            - 자바스크립트 언어로 활용할 수 있는 많은 API가 제공되므로 
              웹 브라우저에서 실행되는 다양한 웹 애플리케이션의 개발이 가능

3. 자바스크립트 환경 구축
    - 1) 서버용 프로그램 : Node.js 설치
        - https://nodejs.org/ko/download
        - LTS(Long Term Support) : 애가 아니면 6개울 뒤에 사라짐 (설치할 때 LTS버전으로 설치)
    - 2) Visual Studio Code
        - 설치, 무설치 버전 
        - live server 사용(폴더로 열어야 한다.)
        - 페이지 저장사항 실시간 반영

4. Visual Studio 환경 설정
    - 1) 한글 설정
        - Extension에서 korean 검색
            - Korean(사용법) Language pack for visual studio code 설치
    - 2) 언어 선택
        - F1 -> Configure Display Language -> 언어선택(en, ko) -> 재시작
    - 3) 테마 변경
        - F1 -> 한글 : 테마, 영어 : theme
    - 4) 기본 단축키
        - control + b : 전체 화면
        - Alt + 방향키 : 한 줄 이동
        - Alt + Shift + 방향키 : 한줄 복사
        - Control + x : 빈 커서에서 사용하면 한 줄 전체 잘라내기
        - Control + Alt + 방향키 : 그리도 모드, 취소는 ESC
        - Shift + Delete : 한 줄 전체 삭제
    - 5) HTML 기본 단축키
        - (1) Tag(요소)명 작성 후 TAB
            - div > tab : <div></div>
        - (2) Tag(요소)명.클래스명 작성 후 TAB
            - div.red > tab : <div class="red"></div>
        - (3) Tag(요소)명.ID 작성 후 TAB
            - div#container > tab : <div id="container"></div>
        - (4) Tag(요소)명 * 개수 작성 후 TAB
            - div*4 > tab : <div></div> 네 개
            - div.wrap*3 > tab : <div class="wrap"></div>
                                 <div class="wrap"></div>
                                 <div class="wrap"></div>

5. Visual Studio Code에서 HTML 실행하기
    - 1) 탐색기에서 html을 찾아서 실행
    - 2) 익스텐션에서 open in browser 설치, Alt + b로 실행
        - 만약 크롬으로 실행되지 않는다면
            - html 우클릭 > 연결프로그램 > 다른 앱 선택 > 항상 .html을 이 앱으로 실행 체크 > Chrome 선택
    - 3) 익스텐션에서 live server 설치
        - 오픈 폴더로 소스 코드 폴더를 열고
            - Alt + l > Alt + o로 실행
            - 소스 코드 저장 시 바로 화면에 반영

6. 자바스크립트 코드의 위치
    - 1) HTML 태그 내에 이벤트 리스너(Event Listener) 속성에 작성
         HTML 태그에는 마우스가 클릭되거나 키보드의 키가 입력되는 등 이벤트가 발생시
         처리하는 코드를 등록하는 리스너 속성이 있고, 여기에 자바스크립트 코드 작성
    - 2) <script></script> 내에 작성
         <head></head>, <body></body>, body밖 등 어느 위치에도 가능
         웹페이지의 여러 곳에 작성 가능 
         <script src="경로"></script>
    - 3) 자바스크립트 파일에 작성
         자바스크립트 코드를 확장자가 .js인 별도의 파일로 저장
         <script src=".js경로"></script>

    - 4) URL 부분에 작성
        <a> 태그는 href속성 등에도 자바스크립트 작성 가능
        href에서 자바스크립트 코드를 쓸 때에는 javascript라는 키워드를 작성해야 함

7. 자바스크립트로 HTML 요소 출력
    - 자바스크립트로 코드로 HTML 요소를 웹 페이지에 직접 삽입하여 
      브라우저 윈도우에 출력되게 할 수 있음.
        - 이 때 사용하는 함수
            - document.write() 또는 document.wirteln()
            * writeln은 줄바꿈(\n) 문자가 삽입되지만 
              HTML은 줄바꿈 문자를 줄바꿈으로 표현하지 않으므로 
              <pre> 태그를 사용하여 줄바꿈 표현이 가능하다.

8. 자바스크립트 대화상자(다이얼로그)
    - 사용자 입력 및 메시지 출력
    - 사용자에게 메시지를 출력하거나, 입력을 받을 수 있는 3가지 다이얼로그가 있다.
    - 1) Prompt(프롬프트)
        - prompt("메시지", "디폴트 입력 값")
        - 디폴트 값은 생략이 가능하다.
        - 사용자가 입력한 문자열 값을 리턴하지만 아무 값도 입력하지 않으면 ""을 리턴
        - 취소나 강제로 닫으면 null을 리턴
        * var : 자바스크립트의 변수 선언
        * console.log : 변수값이나 텍스트 등을 확인하기 위해 사용하는 로그생성 함수
            - 이를 확인하기 위해서 Chrome 등 부라우저의 개발자 도구 -> Console에서 확인
    - 2) Confirm(컨펌, 확인)
        - confirm("메시지")
        - 확인/취소 버튼을 가진 다이얼로그를 출력한다.
        - 확인 = true, 취소 또는 강제 종료 시 false를 리턴
    - 3) Warning(경고)
        - alert("메시지")

9. 데이터 타입과 변수
    - 1) 자바스크립트 식별자(이름)
        - 식별자(identifier)는 변수, 상수, 함수에 붙이는 이름
            - 첫번째 문자 : 알파벳, 언더바, $만 가능
            - 두번째 이하 문자 : 알파벳, 언더바, 숫자(0-9), $ 가능
            - 대소문자 구분 : data와 Data는 다른 식별자이다.
            - 키워드(reserved word)는 사용 불가
                - student_id, _cdoe, data : (o)
                - 6var, if, %calc : (x)
    - 2) 문장 구분
        - 세미클론으로 문장과 문장을 구분
        - 한 줄에 한 문장만 있을 때는 세미클론 생략 가능
            - i = i + 1 (o)
            - j = j + 1; (o)
            - k = k + 1; m = m + 1 (o)
            - n = n + 1 p = p + 1(x)
    - 3) 주석
        - 한 줄 주석 : //
        - 여러 줄 주석 : /* */
    - 4) 데이터 타입(typeof())
        - 숫자 타입(number) : 42, 3.14 ....
        - 논리 타입 : true, false
        - 문자열 타입 : "안녕", '맛있다', 'a'
        - 객체 레퍼런스 타입 : 객체를 가리킴
        - undefined, null
            - 1) undefined : 타입이 정해지지 않은 것을 의미
            - 2) null : 값이 정해지지 않은 것을 의미
    - 5) 변수(Variable)
        - var 키워드로 변수를 선언 
            - var score;
            - var yy, mm, dd;
            - var address = "집없음";
        - var 키워드 없이 변수를 선언한다.
            - age = 20;
            - 정상적으로 작동하나, 만약 위에 age가 이미 선언되어 있다면 값을 변경한다.
            - var를 붙여서 선언하는 것이 명료하고 실수를 막을 수 있으므로 선언할 때는 반드시 사용을 하는 것이 좋다.

    - 6) 지역변수(local), 전역변수(global)
        - 변수의 사용범위(scope)에 따라 지역과 전역으로 나뉨
        - var로 선언 시, scope는 함수의 영역만 판단
        - 전역변수 : 함수 밖에서 선언되거나, 함수 안에서 var없이 선언
        - 지역변수 : 함수 안에서 var로 선언. 선언된 함수에서만 사용 가능

    - 7) 상수(constant)
        - let : 수정 가능
        - const : 수정 불가능

10. Function(함수)
    - 1) 용어
        - 인자(parameter, 파라미터) : 매개변수(선언부)
        - 인수(argument, 아규먼트) : 매개변수에 들어가는 값(사용부)
    - 2) 형태
        - function 함수명(param1, param2, ...){
            코드작성 ;
            return 리턴 값;
        }
        - 함수명 : 동사로 작성