1. 테이블
    1) 테이블
        - 여러 종류의 데이터가 행과 열로 정리된 표
        - <table>태그 사용

        <table border="테두리 굵기(1~)" align="정렬위치" width="col넓이">
            <tr height="행높이">
                <tr>컬럼명</tr>
                <td>데이터</td>
                ....
                <td>데이터</td>
            </tr>
            <tr> .... </tr>
            ....
        </table>
    
    2) 병합
        - 1) 열병합
            colspan="몇개합칠겨?" : 좌에서 우로 합쳐지고 해당 행에만 적용

        - 2) 행병합
            rowspan="몇줄합칠겨?"
                - 현재 행과 아래 행들이 합쳐짐
                - 내가 맨 아리 행이면? > 치느라 수고

    3) 캡션
        - <caption> 태그를 사용하면 테이블의 상단에 짧은 설명을 붙일 수 있다.
        - table 하나당 한 개만 가능
    
    4) colgroup
        - 뒤에 나오는 컬럼(td태그)에 적용할 스타일을 미리 적용할 수 있게 한다.

    5) thead, tbody, tfoot
        - 행을 묶어서 스타일 지정
        - 하나의 테이블에 하나씩 사용 가능
        - 시각 장애인을 위한 화면 판독기 가능(웹 접근성 보장)

2. a 태그 링크
    - link : 아직 한 번도 방문한 적 없는 상태
    - visited : 한 번이라도 가 본 적 있는 상태
    - hover : 링크 위에 마우스를 올려놓은 상태
    - active : 링크를 마우스로 누르고 있느 상태

    - 페이지 책갈피
        - 현재 페이지에서 이동하고 싶은 곳으로 이동하는 법
        - <a> 태그의 name속성을 이용하여 책갈피 생성

3. HTML 요소 구분
    - 블록 레벨 요소
        - 코드에서 한 줄로 써도 앞뒤 요소 사이에 줄을 생성함
    - 인라인 요소
        - 새로운 줄을 만들지 않고 작성한 단락 내에 나타남

    1) 블록 레벨 요소
        - display 속성이 block이면 해당 라인 전체를 차지
        - <p> <h> <ul> <ol> <div> <form>

        - <div> : HTML의 요소들을 하나로 묶는 데 자주 사용되는 대표적인 블록 요소
        
    2) 인라인(inline)
        - display 속성이 inline이면 내용만큼 차지
        - <span> <a> <img> 

        - <span> 
            - 텍스트의 특정 부분을 묶는 데 자주 사용
            - 텍스트의 특정 부분에 스타일을 지정하기 위해 사용

4. iframe
    - 웹페이지 안에 또 다른 웹 페이지 삽입

    <iframe src="페이지주소"></iframe> 

5. form 
    - 웹페이지 내에서 사용자 입력을 받은 후 데이터를 다른 페이지로 전송할때 사용

    <form action="보낼페이지" method="보낼방식">
        <input>.....
        <input>.....
    </form>

6. 시맨틱(semantic) 태그
    - 개발자와 브라우저에게 의미있는 태그를 제공
    - <div> : non-semantic, 안에 들어갈 의미 모름
    - <article> : semantic, 특정 형태의 글이 포함될 것

    - 1) 시맨틱 태그의 종류
        - header : 상단, 헤더를 의미
            - 머리말지정
            - <form>으로 검색창 또는 <nav>를 넣는다.
        - nav : 메뉴, 네비게이션
            - 문서를 연결하는 네비게이션 링크
            - 동일 사이트 또는 다른 사이트
        - aside : 사이드에 위치하는 공간
            - 본문 이외의 내용 표시
            - 광고, 링크 모음 등 메인에 영향이 없는 내용
        - section : 여러 중심 내용을 감싸는 공간
            - 주제별 컨텐츠
        - article : 글자가 많이 들어간 부분
            - 블로그 포스트, 웹 사이트 내용, 사용자 등록 코멘트, 독립적인 웹 컨텐츠
        - footer : 하단, 푸터
            - 저작권 정보, 제작 정보
        - main : header, footer, nav를 제외한 주요 정보 표시
        - address : 사이트 제작자 정보, 연락처 정보
            => 검색엔진 최적화에서 매우 중요한 역활을 한다.
                - 검색결과에 많은 노출을 하고 싶다면 시맨틱 태그를 사용하는 것이 좋다.

7. CSS
    - Cascading Style Sheet
    - HTML요소들이 어떻게 보여질 것인가
    - 스타일을 HTML에서 분리하는 것이 가능

    - HTML만으로 제작하려면 HTML요소의 세부 스타일을 일일이 따로 지정 필요
    - 개발 시간이 길고, 유지보수 어려움
    - W3C에서 스타일 시트 언어 제정 => CSS
    - 스타일을 별도 파일로 저장
    - 디자인을 일관성 있게 유지하도록 해주며, 유지보수가 쉽다.

    - 양식
        P { text-align:center; color:blue; }
        선택자 { 속성명:속성값 ; 속성명; 속성값 } : 선언부

        1. 선택자와 선언부로 구성됨
        2. 선택자는 스타일을 적용하고자 하는 HTML 요소를 가리킴
        3. 선언부는 중괄호로 전체를 둘러쌈
        4. 각 선언들은 :으로 연결, 마지막은 세미클론;으로 종료

    - CSS 선택자
        1. 전체 선택자
            - 스타일을 모든 요소에 적용할 때 사용
            - 주로 모든 하위 요소에 한꺼번에 스타일링 적용
            - 전체 선택자는 * 기호 사용되는
        2. HTML 요소 선택
            - 태그명을 기술
        3. 클래스 선택자
            - .클래스명
        4. 아이디 선택자
            - #아이디로 기술
        5. 그룹 선택자
            - 쉼표로 구분하여 나열

    - CSS 적용 방법
        1. 인라인 스타일
            <p style={color:blue;}>
        2. 내부 스타일 시트
            <head>내에 <style> 태그로 작성
        3. 외부 스타일 시트
            .css 확장자 사용, <head>에 <link> 태그로 포함해야 한다.